@startuml ClassDiagram
' === Classi principali ===
class Game {
  +start()
}

class GameContext {
  +getInstance()
  +setPlayer()
  +getPlayer()
  +setCurrentRoom()
  +getCurrentRoom()
  +getEventManager()
  +setEventManager()
}

class GameStateMemento {
  +getSnapshot()
}

class GameLogger {
  +configure()
}

class AbstractCommandProcessor {
  +processCommand()
}

class CommandProcessor {
  +executeCommand()
}

class DefaultGameInitializer {
  +initialize()
}

class InputSanitizer {
  +clean()
}

class GameFileManager {
  +saveMemento()
  +loadMemento()
}

class GameConfig {
  +get()
  +getInt()
  +getBoolean()
  +getDouble()
}

' === Eventi ===
interface EventListener {
  +onEvent()
}

class EventManager {
  +subscribe()
  +notify()
}

class GameEvent {
  +getType()
  +getMessage()
  +getPayload()
}

class DropListener
class ScoreListener

' === EntitÃ  ===
abstract class Entity {
  +getName()
  +getHealth()
  +attack()
  +takeDamage()
}

class Player {
  +equip()
  +heal()
  +getStatus()
}

class Enemy {
  +getDrop()
  +setDrop()
  +getStrategy()
  +executeStrategy()
}

interface EnemyStrategy {
  +attack()
}

class AggressiveStrategy
class DefensiveStrategy

class EnemyFactory {
  +createEnemy()
}

interface EnemyTemplate {
  +getName()
  +getHealth()
  +getStrategy()
  +create()
}

' === Oggetti ===
class Item {
  +getName()
  +getPower()
  +getType()
}

class CompositeItem {
  +addItem()
  +getComponents()
}

class ItemBuilder {
  +setName()
  +setType()
  +setPower()
  +build()
}

class Inventory {
  +addItem()
  +removeItem()
  +stream()
}

class ItemFactory {
  +createItem()
}

interface ItemTemplate {
  +create()
  +getName()
}

enum ItemType

' === Mappa ===
class Room {
  +getName()
  +getDescription()
  +setExit()
  +getExit()
  +addItem()
  +removeItem()
  +setLocked()
}

class CompositeRoom {
  +addRoom()
  +getMainRoom()
}

class RoomIterator

class RoomFactory {
  +createRoom()
}

interface RoomTemplate {
  +getType()
  +create()
}

class MapLoader {
  +load()
}

' === Annotazioni ===
annotation AutoLoad

' === Sicurezza ===
class GameException

' === Relazioni principali ===
Game --> CommandProcessor
Game --> GameContext
GameContext --> Player
GameContext --> Room
GameContext --> EventManager
CommandProcessor --> AbstractCommandProcessor
CommandProcessor --> GameContext
CommandProcessor --> GameFileManager
CommandProcessor --> GameStateMemento
CommandProcessor --> Room
CommandProcessor --> Inventory
Player --> Entity
Enemy --> Entity
Enemy --> EnemyStrategy
Enemy --> Item
EnemyFactory --> EnemyTemplate
ItemFactory --> ItemTemplate
CompositeRoom --> Room
RoomIterator --> Room
EventManager --> EventListener
DropListener --> EventListener
ScoreListener --> EventListener
GameFileManager --> GameStateMemento
MapLoader --> Room
MapLoader --> CompositeRoom
@enduml
